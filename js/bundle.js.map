{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AC3G2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,UAAU,MAAM,SAAS;AACrD,8CAA8C,WAAW;AACzD,4CAA4C,UAAU;AACtD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAO;AACX;AACA,4BAA4B,kCAAkC;AAC9D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC5C4B;AACA;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACA;;;;;;;;;;;;;;;;ACzDa;AAClC;AACA,kBAAkB,uFAAuF;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAO;AACnC,4BAA4B,+CAAO;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,kCAAkC,+CAAO;AACzC,mDAAmD,OAAO;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,kCAAkC,+CAAO;AACzC,mDAAmD,OAAO;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D,sCAAsC,+CAAO;AAC7C;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC7GrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACzCnB;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;AC5DrB;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACqB;AACE;AACA;AACA;AACE;AACJ;AACE;AACpC;AACA;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,CAAC,C","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/getData.js","webpack://food/./js/services/postData.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    const result = document.querySelector('.calculating__result span');\r\n    let gender = 'female',\r\n        height,\r\n        weight,\r\n        age,\r\n        activity = 1.375;\r\n\r\n    if (localStorage.getItem('gender')) {\r\n        gender = localStorage.getItem('gender');\r\n    } else {\r\n        gender = 'female';\r\n        localStorage.setItem('gender', 'femail');\r\n    }\r\n    if (localStorage.getItem('activity')) {\r\n        activity = localStorage.getItem('activity');\r\n    } else {\r\n        activity = 1.375;\r\n        localStorage.setItem('activity', 1.375);\r\n    }\r\n\r\n    function initLocalSttings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n        elements.forEach(element => {\r\n            element.classList.remove(activeClass);\r\n            if (element.getAttribute('id') === localStorage.getItem('gender')) {\r\n                element.classList.add(activeClass);\r\n            }\r\n            if (element.getAttribute('data-act') === localStorage.getItem('activity')) {\r\n                element.classList.add(activeClass);\r\n            }\r\n        })\r\n    }\r\n\r\n    initLocalSttings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSttings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // функция подсчета каллорий по формуле и вывода на экран. для мужчины и женщины разные формулы. С проврекой на заполненые данные\r\n    function calcTotal() {\r\n        if (!gender || !height || !weight || !age || !activity) {\r\n            result.textContent = '...';\r\n            return;\r\n        }\r\n        if (gender === 'female') {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * activity);\r\n        } else {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * activity);\r\n        }\r\n    }\r\n    calcTotal();\r\n\r\n    //  функция приема статических данных( пол и активность)\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach((element) => {\r\n            element.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-act')) {\r\n                    activity = +e.target.getAttribute('data-act');\r\n                    localStorage.setItem('activity', +e.target.getAttribute('data-act'))\r\n                } else {\r\n                    gender = e.target.getAttribute('id');\r\n                    localStorage.setItem('gender', e.target.getAttribute('id'))\r\n                }\r\n                elements.forEach((element) => {\r\n                    element.classList.remove(activeClass);\r\n                })\r\n\r\n                e.target.classList.add(activeClass);\r\n                calcTotal();\r\n            })\r\n        });\r\n    }\r\n\r\n    // функция приема динамических данных(вес, возраст, рост)\r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break\r\n            }\r\n            calcTotal();\r\n        });\r\n\r\n    }\r\n\r\n    // вызовы функций для каждого блока калькулятора\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    getDinamicInformation('#height');\r\n    getDinamicInformation('#weight');\r\n    getDinamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import { getData } from \"../services/getData\";\r\n\r\nfunction cards() {\r\n    const menu = document.querySelector('.menu__field .container');\r\n\r\n    // класс для карточек с меню\r\n    class MenuItem {\r\n        constructor(img, alt, title, text, price, ...classes) {\r\n            this.img = img;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.text = text;\r\n            this.price = price;\r\n            this.classes = classes;\r\n        }\r\n        showMenuItem(selector) {\r\n            const menuItem = document.createElement('div');\r\n            if (this.classes.length === 0) {\r\n                menuItem.classList.add('menu__item');\r\n            } else {\r\n                this.classes.forEach(className => menuItem.classList.add(className));\r\n            }\r\n            menuItem.innerHTML =\r\n                `<img src=${this.img} alt=${this.alt}>\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.text}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> $/день</div>\r\n            </div>`;\r\n            selector.prepend(menuItem);\r\n        }\r\n    }\r\n\r\n    //получение карточек с сервера и добавление их на страницу \r\n    getData('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({ img, altimg, title, descr, price }) => {\r\n                new MenuItem(img, altimg, title, descr, price, 'menu__item').showMenuItem(menu);\r\n            })\r\n        })\r\n}\r\n\r\nexport default cards;","import { closeModal, openModal } from \"./modal\";\r\nimport { postData } from \"../services/postData\";\r\n\r\nfunction forms() {\r\n    const forms = document.querySelectorAll('form'),\r\n        message = {\r\n            success: 'Спасибо! Скоро мы с вами свяжемся',\r\n            loading: 'img/form/005 spinner.svg',\r\n            error: 'Произошла ошибка. Попробуйте позже',\r\n        };\r\n\r\n    // отправка форм на сервер. формы получаются через FormFata\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const formData = new FormData(form),\r\n                json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success);\r\n                    statusMessage.remove();\r\n                }).catch(() => {\r\n                    showThanksModal(message.error);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n        });\r\n    }\r\n\r\n    forms.forEach(form => {\r\n        bindPostData(form);\r\n    })\r\n\r\n    //показ модального окна после заполнения формы\r\n    function showThanksModal(message) {\r\n        const prevModalDilog = document.querySelector('.modal__dialog');\r\n        prevModalDilog.classList.remove('show');\r\n        prevModalDilog.classList.add('hide');\r\n        openModal('.modal');\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div class=\"modal__title\">${message}</div>\r\n            <div data-close class=\"modal__close\">×</div>\r\n        </div>`\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDilog.classList.add('show');\r\n            prevModalDilog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 2000)\r\n    }\r\n}\r\n\r\nexport default forms;","// открытие окна на классах + отмена скролла для страницы за окном\r\nfunction openModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.remove('hide');\r\n    modal.classList.add('show');\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\n// закрытие окна\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.remove('show');\r\n    modal.classList.add('hide');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector) {\r\n    const modalBtn = document.querySelectorAll(triggerSelector),\r\n        modal = document.querySelector(modalSelector);\r\n\r\n    // открытие модального окна через 15 сек после захода на сайт\r\n    const modalTimer = setTimeout(() => openModal(modalSelector), 5000);\r\n\r\n    // открытие модального окна при наадатии на кнопку связаться с нами. Если пользователь самостоятельно открывает окно, снимаем открытие через 15 сек\r\n    modalBtn.forEach((btn) => {\r\n        btn.addEventListener('click', () => {\r\n            openModal(modalSelector);\r\n            clearInterval(modalTimer);\r\n        })\r\n    })\r\n\r\n    // закрытие по нажатию по пустому пространству или элименту с атрибутом \r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') === '') {\r\n            closeModal(modalSelector);\r\n        }\r\n    })\r\n\r\n    // закрытие по Escape\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    })\r\n\r\n    // закрытие по достижению конца страницы\r\n    function showModalbyScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n            openModal(modalSelector);\r\n            window.removeEventListener('scroll', showModalbyScroll)\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalbyScroll)\r\n}\r\n\r\nexport default modal;\r\nexport { openModal };\r\nexport { closeModal };","import { getZero } from \"./timer\";\r\n\r\nfunction slider({ sliderContainer, slide, prevBtn, nextBtn, wrapper, line, totalCounter, currentCounter }) {\r\n    const slider = document.querySelector(sliderContainer),\r\n        sliderWrapper = slider.querySelector(wrapper),\r\n        slides = sliderWrapper.querySelectorAll(slide),\r\n        sliderPrevBtn = slider.querySelector(prevBtn),\r\n        sliderNextBtn = slider.querySelector(nextBtn),\r\n        curentSlide = slider.querySelector(currentCounter),\r\n        totalSlides = slider.querySelector(totalCounter),\r\n        slidrLine = sliderWrapper.querySelector(line),\r\n        sliderDotsWrapper = document.createElement('ol'),\r\n        dotsArray = [],\r\n        wrapperWidth = window.getComputedStyle(sliderWrapper).width;\r\n    let slideIndex = 1,\r\n        offset = 0;\r\n\r\n    // показывает общее колличество слайдов и номер текущего слайда функция getZero добавляет 0 перед цифрой если она меньше 10\r\n    totalSlides.innerHTML = getZero(slides.length);\r\n    curentSlide.innerHTML = getZero(slideIndex);\r\n\r\n    // sliderLine равен длине всех слайдов в процентах. каждый слайд равен ширине окна показа\r\n    slidrLine.style.width = 100 * slides.length + '%';\r\n    slides.forEach((slide) => {\r\n        slide.style.width = wrapperWidth;\r\n    })\r\n\r\n    // размещение обертки точек на слайдере и добавление класса\r\n    slider.style.position = 'relative';\r\n    sliderDotsWrapper.classList.add('carousel-indicators');\r\n    slider.append(sliderDotsWrapper);\r\n\r\n    // создание точек, размещение точек в обертке, добавление точкам класса и атрибута для переключения, добавления точек в массив\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const sliderDot = document.createElement('li');\r\n        sliderDot.setAttribute('data-slide-to', i + 1);\r\n        sliderDot.classList.add('dot');\r\n\r\n        sliderDotsWrapper.append(sliderDot);\r\n        dotsArray.push(sliderDot);\r\n        if (i == 0) {\r\n            changeDot(i);\r\n        }\r\n    }\r\n\r\n    // смена цвета у точки (активность точки)\r\n    function changeDot(i) {\r\n        dotsArray.forEach(dot => {\r\n            dot.style.cssText = `\r\n            background-color: #fff;\r\n            opacity: 0.5;\r\n            `;\r\n            dotsArray[i].style.cssText = `\r\n            background-color: #585757;\r\n            opacity: 1;\r\n            `;\r\n        })\r\n    }\r\n\r\n    // удаление из строки букв и приведение к числу\r\n    function strToInt(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    // переключение слайдов вперед (slider line двигается влево на ширину слайда)\r\n    sliderNextBtn.addEventListener('click', () => {\r\n        if (offset == strToInt(wrapperWidth) * (slides.length - 1)) {\r\n            offset = 0;\r\n            slideIndex = 1;\r\n        } else {\r\n            offset += strToInt(wrapperWidth)//+wrapperWidth.replace(/\\D/g, '');\r\n            slideIndex++\r\n        }\r\n        curentSlide.textContent = getZero(slideIndex);\r\n        slidrLine.style.transform = `translateX(-${offset}px)`;\r\n\r\n        changeDot(slideIndex - 1);\r\n    })\r\n\r\n    // переключение слайда назад (двигается вправо)\r\n    sliderPrevBtn.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = strToInt(wrapperWidth) * (slides.length - 1);\r\n            slideIndex = slides.length;\r\n        } else {\r\n            offset -= strToInt(wrapperWidth)//+wrapperWidth.replace(/\\D/g, '');\r\n            slideIndex--;\r\n        }\r\n        curentSlide.textContent = getZero(slideIndex);\r\n        slidrLine.style.transform = `translateX(-${offset}px)`;\r\n\r\n        changeDot(slideIndex - 1);\r\n    })\r\n\r\n    // переключение слайдов по нажитю на точки\r\n    dotsArray.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = strToInt(wrapperWidth) * (slideTo - 1);\r\n            slidrLine.style.transform = `translateX(-${offset}px)`;\r\n            curentSlide.textContent = getZero(slideIndex);\r\n            changeDot(slideIndex - 1);\r\n\r\n        })\r\n    })\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabContentSelector, tabParantSelector, tabActiveClass) {\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n        tabContent = document.querySelectorAll(tabContentSelector),\r\n        tabWrapper = document.querySelector(tabParantSelector);\r\n\r\n    //на весь контент весит класс hide. со всех табов снимает класс активности \r\n    function hideTabs() {\r\n        tabs.forEach((element) => {\r\n            element.classList.remove(tabActiveClass);\r\n        })\r\n        tabContent.forEach((element) => {\r\n            element.classList.remove('show', 'fade');\r\n            element.classList.add('hide');\r\n        })\r\n    }\r\n\r\n\r\n    // удаляет с нужного объекта класс hide и добавляет show и fade для анимации\r\n    function showTab(i = 0) {\r\n        tabs[i].classList.add(tabActiveClass);\r\n        tabContent[i].classList.remove('hide');\r\n        tabContent[i].classList.add('show', 'fade');\r\n    }\r\n\r\n    hideTabs();\r\n    showTab();\r\n\r\n    // делигирует событие на нажатый элемент если он имеет нужный класс. по нажатию весь конткнт прячется, а нужный появляется\r\n    tabWrapper.addEventListener('click', event => {\r\n        const target = event.target;\r\n        if (target && target.classList.contains(tabsSelector.clice(1))) {\r\n            tabs.forEach((element, index) => {\r\n                if (element == target) {\r\n                    hideTabs();\r\n                    showTab(index);\r\n                }\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport default tabs;","//  добавляет 0 когда число меньше 10 \r\nfunction getZero(num) {\r\n    if (num >= 0 && num < 10) {\r\n        return `0${num}`;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\nfunction timer(timerId, deadLine) {\r\n\r\n    //расчет оставшегося времени до нужной даты в дняхб часах, минутах и секундах \r\n    function timeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - new Date();\r\n        let days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n            hours = Math.floor((t / (1000 * 60 * 60)) % 24),\r\n            minutes = Math.floor((t / (1000 * 60)) % 60),\r\n            seconds = Math.floor((t / 1000) % 60);\r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        }\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds,\r\n        };\r\n    }\r\n\r\n    // получет объекты по id внутри нжного селектора. добавляет в эти теги данные из функции оставшегося вресени. обновляет данные каждую секунду \r\n    function setTimer(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateTimer, 1000);\r\n        updateTimer();\r\n\r\n        function updateTimer() {\r\n            const t = timeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setTimer(timerId, deadLine)\r\n}\r\n\r\nexport default timer;\r\nexport { getZero };","const getData = async (url) => {\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n    }\r\n    return await res.json();\r\n}\r\n\r\nexport { getData };","const postData = async (url, data) => {\r\n    const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data,\r\n    });\r\n    return await res.json();\r\n}\r\nexport { postData };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\nimport calc from './modules/calc';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport modal from './modules/modal';\r\nimport slider from './modules/slider';\r\nimport tabs from './modules/tabs';\r\nimport timer from './modules/timer';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    calc();\r\n    cards();\r\n    forms();\r\n    modal('[data-modal]', '.modal');\r\n    slider({\r\n        sliderContainer: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        prevBtn: '.offer__slider-prev',\r\n        nextBtn: '.offer__slider-next',\r\n        line: '.slider__line',\r\n        wrapper: '.offer__slider-wrapper',\r\n        currentCounter: '#current',\r\n        totalCounter: '#total',\r\n    });\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    timer('.timer', '2023-05-20');\r\n})"],"names":[],"sourceRoot":""}